import styleSettings from './settings.module.css';
import { useState } from "react";

import useAdminSubmit from "../../utils/hooks/useAdminSubmit";
import useCollegeSubmit from '../../utils/hooks/useCollegeSubmit';
import useFacultySubmit from '../../utils/hooks/useFacultySubmit';
import useRegistrarSubmit from '../../utils/hooks/useRegistrarSubmit';
import useEmailConfirmReg from '../../utils/hooks/useEmailConfirmReg';

export function Settings() {
  const [showPassword, setShowPassword] = useState(false);
  const [isAdminModalOpen, setAdminModalOpen] = useState(false);
  const [isCollegeModalOpen, setCollegeModalOpen] = useState(false);
  const [isFacultyModalOpen, setFacultyModalOpen] = useState(false);
  const [isRegistrarModalOpen, setRegistrarModalOpen] = useState(false);
  const [submissionType, setSubmissionType] = useState(null);

  const { dataAdmin, errorAdmin, handleChangeAdmin, handleSubmitAdmin, resetAdminForm } = useAdminSubmit();
  const { dataCollege, errorCollege, handleChangeCollege, handleSubmitCollegeStaff, resetCollegeForm } = useCollegeSubmit();
  const { dataFaculty, errorFaculty, handleChangeFaculty, handleSubmitFaculty, resetFacultyForm } = useFacultySubmit();
  const { dataRegistrar, errorRegistrar, handleChangeRegistrar, handleSubmitRegistrarStaff, resetRegistrarForm } = useRegistrarSubmit();

  const {
    dataEmail,
    errorEmail,
    handleChangeEmail,
    handleSubmitEmail,
    enteredCode,
    handleChangeCode,
    isCodeValid,
    resetCode,
    isCooldownActive,
    cooldownTime
  } = useEmailConfirmReg();
 

  const handleSendCode = () => {
    handleSubmitEmail({ preventDefault: () => {} });
  };
  

  const handleSave = async (e) => {
    e.preventDefault();
  
    
  
    try {
      // Handle data submission based on type
      switch (submissionType) {
        case 'admin':
          await handleSubmitAdmin();
          
          break;
        case 'college':
          await handleSubmitCollegeStaff();
          
          break;
        case 'faculty':
          await handleSubmitFaculty();
          
          break;
        case 'registrar':
          await handleSubmitRegistrarStaff();
          
          break;
        default:
          console.warn('Unknown submission type');
          return; // Exit early if the submission type is unknown
      }
      
    } catch (err) {
      console.error('Error during save process:', err);
      
    }
  
    // Reset code regardless of success or failure
    resetCode();
  };
  
  

  const togglePasswordVisibility = () => {
    setShowPassword(!showPassword);
  };

  const handleAddAdminClick = () => {
    setSubmissionType('admin');
    setAdminModalOpen(true);
  };

  const handleAddCollegeClick = () => {
    setSubmissionType('college');
    setCollegeModalOpen(true);
  };

  const handleAddFacultyClick = () => {
    setSubmissionType('faculty');
    setFacultyModalOpen(true);
  };

  const handleAddRegistrarClick = () => {
    setSubmissionType('registrar');
    setRegistrarModalOpen(true);
  };

  const handleCloseModal = () => {
    setAdminModalOpen(false);
    setCollegeModalOpen(false);
    setFacultyModalOpen(false);
    setRegistrarModalOpen(false);

    resetCode();
    // Reset specific form states
    if (submissionType === 'admin') {
      // Reset admin form fields
      resetAdminForm();
    } else if (submissionType === 'college') {
      // Reset college form fields
      resetCollegeForm();
    } else if (submissionType === 'faculty') {
      // Reset faculty form fields
      resetFacultyForm();
    } else if (submissionType === 'registrar') {
      // Reset registrar form fields
      resetRegistrarForm();
    }
  };

  return (
    <div className={styleSettings.mainContainer}>
      <div className={styleSettings.dashboardContent}>
        <div className={styleSettings.addNewUserContainer}>
          <h2>Add New User</h2>
          <div className={styleSettings.btnContainer}>
            <button className={styleSettings.addNewUserBtn} onClick={handleAddAdminClick}>
              Admin
            </button>
            <button className={styleSettings.addNewUserBtn} onClick={handleAddCollegeClick}>
              College Staff
            </button>
            <button className={styleSettings.addNewUserBtn} onClick={handleAddFacultyClick}>
              Faculty Staff
            </button>
            <button className={styleSettings.addNewUserBtn} onClick={handleAddRegistrarClick}>
              Registrar Staff
            </button>
          </div>
        </div>

        <div className={styleSettings.passwordContainer}>
          <form onSubmit={(e) => e.preventDefault()} className={styleSettings.formContainer}>
            <label htmlFor="currentPassword">Current Password:</label>
            <input 
              type={showPassword ? 'text' : 'password'} 
              id='currentPassword' 
            />
            <label htmlFor="newPassword">New Password:</label>
            <input 
              type={showPassword ? 'text' : 'password'} 
              id='newPassword' 
            />
            <label htmlFor="confirmPassword">Confirm Password:</label>
            <input 
              type={showPassword ? 'text' : 'password'} 
              id='confirmPassword' 
            />
            <div className={styleSettings.showPass}>
              <input 
                type="checkbox" 
                id="showPassword" 
                checked={showPassword} 
                onChange={togglePasswordVisibility} 
              />
              <label htmlFor="showPassword">Show Passwords</label>
            </div>
          </form>
        </div>
      </div>

      
      {errorCollege && <div className={styleSettings.errorMessage}>{errorCollege}</div>}
      {errorFaculty && <div className={styleSettings.errorMessage}>{errorFaculty}</div>}
      {errorRegistrar && <div className={styleSettings.errorMessage}>{errorRegistrar}</div>}
      {errorEmail && <p style={{ color: 'red' }}>{errorEmail}</p>}
      {/* {emailError && <p style={{ color: 'red' }}>{emailError}</p>} */}

      {isAdminModalOpen && 
        <div className={styleSettings.modalOverlay}>
          <div className={styleSettings.modal}>
            <h2>Add New Admin</h2>
            {errorAdmin && <div className={styleSettings.errorMessage}>{errorAdmin}</div>}
            <form onSubmit={handleSave}>
              <div className={styleSettings.editInput}>
                <label>Email:</label>
                <div className={styleSettings.inputWithButton}>
                  <input 
                    id='email' 
                    name='email'
                    type='email'  
                    className={styleSettings.editField} 
                    value={dataEmail.email || dataAdmin.email}
                    onChange={(e) => {
                      handleChangeAdmin(e);
                      handleChangeEmail(e);
                    }}
                    required
                  />
                  <button 
                    type="button" 
                    className={styleSettings.sendCode}
                    onClick={handleSendCode}
                    disabled={isCooldownActive}
                  >
                    {isCooldownActive ? `Please wait ${Math.floor(cooldownTime / 60)}:${cooldownTime % 60}` : "Send Code"}
                  </button>

                </div>
              </div>
              
              <div className={styleSettings.editInput}>
                <label className={styleSettings.codeRow}>Please Enter Code: 
                {isCodeValid === true && <p className={styleSettings.success} style={{ color: 'green'}}>Code is correct</p>}
                {isCodeValid === false && <p className={styleSettings.error} style={{ color: 'red' }}>Code is incorrect</p>}
                </label>
                <input 
                  type='text' 
                  className={styleSettings.editField}
                  value={enteredCode}
                  onChange={handleChangeCode}
                  required
                />
              </div>
              
              <div className={styleSettings.editInput}>
                <label>Last Name:</label>
                <input 
                  type='text' 
                  className={styleSettings.editField}
                  id='last_name' 
                  name='last_name'
                  value={dataAdmin.last_name}
                  onChange={handleChangeAdmin}
                  required
                />
              </div>

              <div className={styleSettings.editInput}>
                <label>First Name:</label>
                <input 
                  type='text' 
                  className={styleSettings.editField}
                  id='first_name' 
                  name='first_name'
                  value={dataAdmin.first_name}
                  onChange={handleChangeAdmin}
                  required
                />
              </div>

              <div className={styleSettings.btnRow}>
                <button type="button" className={styleSettings.cancelBtn} onClick={handleCloseModal}>Close</button>
                <button 
                  type="submit" 
                  className={styleSettings.saveBtn}
                  disabled={!isCodeValid}
                >
                  Save
                </button>
              </div>
            </form>
          </div>
        </div>
      }

      {isCollegeModalOpen && 
        <div className={styleSettings.modalOverlay}>
          <div className={styleSettings.modal}>
            <h2>Add New College Staff</h2>
            <form onSubmit={handleSave}>
              <div className={styleSettings.editInput}>
                <label>Email:</label>
                <div className={styleSettings.inputWithButton}>
                  <input 
                    id='email' 
                    name='email'
                    type='email' 
                    className={styleSettings.editField} 
                    value={dataCollege.email}
                    onChange={handleChangeCollege}
                    required 
                  />
                  <button type="button" className={styleSettings.sendCode}>Send Code</button>
                </div>
              </div>
              
              <div className={styleSettings.editInput}>
                <label>Please Enter Code:</label>
                <input 
                  type='text' 
                  className={styleSettings.editField}
                />
              </div>

              <div className={styleSettings.editInput}>
                <label>Last Name:</label>
                <input 
                  type='text' 
                  className={styleSettings.editField}
                  id='last_name' 
                  name='last_name'
                  value={dataCollege.last_name}
                  onChange={handleChangeCollege}
                  required 
                />
              </div>

              <div className={styleSettings.editInput}>
                <label>First Name:</label>
                <input 
                  type='text' 
                  className={styleSettings.editField}
                  id='first_name' 
                  name='first_name'
                  value={dataCollege.first_name}
                  onChange={handleChangeCollege}
                  required 
                />
              </div>

              <div className={styleSettings.btnRow}>
                <button type="button" className={styleSettings.cancelBtn} onClick={handleCloseModal}>Close</button>
                <button type="submit" className={styleSettings.saveBtn}>Save</button>
              </div>
            </form>
          </div>
        </div>
      }

      {isFacultyModalOpen && 
        <div className={styleSettings.modalOverlay}>
          <div className={styleSettings.modal}>
            <h2>Add New Faculty Staff</h2>
            <form onSubmit={handleSave}>
              <div className={styleSettings.editInput}>
                <label>Email:</label>
                <div className={styleSettings.inputWithButton}>
                  <input 
                    id='email' 
                    name='email'
                    type='email' 
                    className={styleSettings.editField} 
                    value={dataFaculty.email}
                    onChange={handleChangeFaculty}
                    required 
                  />
                  <button type="button" className={styleSettings.sendCode}>Send Code</button>
                </div>
              </div>

              <div className={styleSettings.editInput}>
                <label>Please Enter Code:</label>
                <input 
                  type='text' 
                  className={styleSettings.editField}
                />
              </div>

              <div className={styleSettings.editInput}>
                <label>Last Name:</label>
                <input 
                  type='text' 
                  className={styleSettings.editField}
                  id='last_name' 
                  name='last_name'
                  value={dataFaculty.last_name}
                  onChange={handleChangeFaculty}
                  required 
                />
              </div>

              <div className={styleSettings.editInput}>
                <label>First Name:</label>
                <input 
                  type='text' 
                  className={styleSettings.editField}
                  id='first_name' 
                  name='first_name'
                  value={dataFaculty.first_name}
                  onChange={handleChangeFaculty}
                  required 
                />
              </div>

              <div className={styleSettings.btnRow}>
                <button type="button" className={styleSettings.cancelBtn} onClick={handleCloseModal}>Close</button>
                <button type="submit" className={styleSettings.saveBtn}>Save</button>
              </div>
            </form>
          </div>
        </div>
      }

      {isRegistrarModalOpen && 
        <div className={styleSettings.modalOverlay}>
          <div className={styleSettings.modal}>
            <h2>Add New Registrar Staff</h2>
            <form onSubmit={handleSave}>
              <div className={styleSettings.editInput}>
                <label>Email:</label>
                <div className={styleSettings.inputWithButton}>
                  <input 
                    id='email' 
                    name='email'
                    type='email' 
                    className={styleSettings.editField} 
                    value={dataRegistrar.email}
                    onChange={handleChangeRegistrar}
                    required 
                  />
                  <button type="button" className={styleSettings.sendCode}>Send Code</button>
                </div>
              </div>

              <div className={styleSettings.editInput}>
                <label>Please Enter Code:</label>
                <input 
                  type='text' 
                  className={styleSettings.editField}
                />
              </div>

              <div className={styleSettings.editInput}>
                <label>Last Name:</label>
                <input 
                  type='text' 
                  className={styleSettings.editField}
                  id='last_name' 
                  name='last_name'
                  value={dataRegistrar.last_name}
                  onChange={handleChangeRegistrar}
                  required 
                />
              </div>

              <div className={styleSettings.editInput}>
                <label>First Name:</label>
                <input 
                  type='text' 
                  className={styleSettings.editField}
                  id='first_name' 
                  name='first_name'
                  value={dataRegistrar.first_name}
                  onChange={handleChangeRegistrar}
                  required 
                />
              </div>

              <div className={styleSettings.btnRow}>
                <button type="button" className={styleSettings.cancelBtn} onClick={handleCloseModal}>Close</button>
                <button type="submit" className={styleSettings.saveBtn}>Save</button>
              </div>
            </form>
          </div>
        </div>
      }
    </div>
  );
}
