import React, { useState } from 'react';
import { useGetAllUsers } from '../../utils/hooks/usersListHooks/useGetAllUsers';
import styleUsers from './usersList.module.css';
import deleteIcon from '../../assets/icons/delete.png';
import axios from 'axios';
import { toast } from 'react-toastify';

export function UsersList() {
  const { users, loading, error, refetch } = useGetAllUsers();
  const [isConfirmDeleteModalOpen, setConfirmDeleteModalOpen] = useState(false);
  const [userIdToDelete, setUserIdToDelete] = useState(null);
  const [userTypeToDelete, setUserTypeToDelete] = useState(null);
  const [loadingDelete, setLoadingDelete] = useState(false);
  const [searchQuery, setSearchQuery] = useState('');

  const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms));

  const openConfirmDeleteModal = (id, userType) => {
    setUserIdToDelete(id);
    setUserTypeToDelete(userType);
    setConfirmDeleteModalOpen(true);
  };

  const handleDelete = async () => {
    setLoadingDelete(true);
    try {
      await delay(3000);
      await axios.delete(`/api/delete_user/${userTypeToDelete}/${userIdToDelete}`);
      refetch();
      toast.success("Successfully Deleted User");
      setConfirmDeleteModalOpen(false);
    } catch (error) {
      console.error('Error deleting user:', error);
    } finally {
      setLoadingDelete(false);
    }
  };

  const handleSearchChange = (event) => {
    setSearchQuery(event.target.value);
  };

  const filterUsers = (userList) => {
    return userList.filter((user) =>
      user.ID.toLowerCase().includes(searchQuery.toLowerCase()) ||
      user.last_name.toLowerCase().includes(searchQuery.toLowerCase()) ||
      user.first_name.toLowerCase().includes(searchQuery.toLowerCase()) ||
      user.middle_name.toLowerCase().includes(searchQuery.toLowerCase()) ||
      user.title.toLowerCase().includes(searchQuery.toLowerCase())
    );
  };

  if (loading) return <div>Loading...</div>;
  if (error) return <div>Error: {error}</div>;

  return (
    <div className={styleUsers.mainContainer}>
      <div className={styleUsers.searchBar}>
        <input 
          type="text" 
          placeholder='Search User...'  
          className={styleUsers.searchInput} 
          value={searchQuery}
          onChange={handleSearchChange}
        />
      </div>

      <div className={styleUsers.tableContainer}>
        <h3>Admins</h3>
        <table className={styleUsers.classInfoTable}>
          <thead>
            <tr>
              <th>ID</th>
              <th>Last Name</th>
              <th>First Name</th>
              <th>Middle Name</th>
              <th>Title</th>
              <th>Action</th>
            </tr>
          </thead>
          <tbody>
            {filterUsers(users.admins).map((user) => (
              <tr key={user._id}>
                <td>{user.ID}</td>
                <td>{user.last_name}</td>
                <td>{user.first_name}</td>
                <td>{user.middle_name}</td>
                <td>{user.title}</td>
                <td>
                  <button 
                    onClick={() => openConfirmDeleteModal(user._id, 'admin')} 
                    className={styleUsers.deleteBtn}
                  >
                    <img src={deleteIcon} className={styleUsers.deleteImg} alt="Delete" />
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>

      <div className={styleUsers.tableContainer}>
        <h3>College Staff</h3>
        <table className={styleUsers.classInfoTable}>
          <thead>
            <tr>
              <th>ID</th>
              <th>Last Name</th>
              <th>First Name</th>
              <th>Middle Name</th>
              <th>Title</th>
              <th>Action</th>
            </tr>
          </thead>
          <tbody>
            {filterUsers(users.collegeStaff).map((user) => (
              <tr key={user._id}>
                <td>{user.ID}</td>
                <td>{user.last_name}</td>
                <td>{user.first_name}</td>
                <td>{user.middle_name}</td>
                <td>{user.title}</td>
                <td>
                  <button 
                    onClick={() => openConfirmDeleteModal(user._id, 'collegeStaff')} 
                    className={styleUsers.deleteBtn}
                  >
                    <img src={deleteIcon} className={styleUsers.deleteImg} alt="Delete" />
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>

      <div className={styleUsers.tableContainer}>
        <h3>Registrar Staff</h3>
        <table className={styleUsers.classInfoTable}>
          <thead>
            <tr>
              <th>ID</th>
              <th>Last Name</th>
              <th>First Name</th>
              <th>Middle Name</th>
              <th>Title</th>
              <th>Action</th>
            </tr>
          </thead>
          <tbody>
            {filterUsers(users.registrarStaff).map((user) => (
              <tr key={user._id}>
                <td>{user.ID}</td>
                <td>{user.last_name}</td>
                <td>{user.first_name}</td>
                <td>{user.middle_name}</td>
                <td>{user.title}</td>
                <td>
                  <button 
                    onClick={() => openConfirmDeleteModal(user._id, 'registrarStaff')} 
                    className={styleUsers.deleteBtn}
                  >
                    <img src={deleteIcon} className={styleUsers.deleteImg} alt="Delete" />
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>

      <div className={styleUsers.tableContainer}>
        <h3>Faculty Staff</h3>
        <table className={styleUsers.classInfoTable}>
          <thead>
            <tr>
              <th>ID</th>
              <th>Last Name</th>
              <th>First Name</th>
              <th>Middle Name</th>
              <th>Title</th>
              <th>Action</th>
            </tr>
          </thead>
          <tbody>
            {filterUsers(users.facultyStaff).map((user) => (
              <tr key={user._id}>
                <td>{user.ID}</td>
                <td>{user.last_name}</td>
                <td>{user.first_name}</td>
                <td>{user.middle_name}</td>
                <td>{user.title}</td>
                <td>
                  <button 
                    onClick={() => openConfirmDeleteModal(user._id, 'facultyStaff')} 
                    className={styleUsers.deleteBtn}
                  >
                    <img src={deleteIcon} className={styleUsers.deleteImg} alt="Delete" />
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>

      {isConfirmDeleteModalOpen && (
        <div className={styleUsers.modalOverlay}>
          <div className={styleUsers.modal}>
            <h2>Confirm Deletion</h2>
            <h4>Are you sure you want to delete this user?</h4>
            <div className={styleUsers.buttonRow}>
              <button onClick={handleDelete} disabled={loadingDelete} className={styleUsers.confirmDeleteBtn}>
                {loadingDelete ? (
                  <div className={styleUsers.loader}></div> 
                ) : (
                  "Yes, Delete"
                )}
              </button>
              <button onClick={() => setConfirmDeleteModalOpen(false)} className={styleUsers.cancelBtn}>Cancel</button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}
